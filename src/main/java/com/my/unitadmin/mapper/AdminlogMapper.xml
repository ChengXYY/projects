<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.my.unitadmin.mapper.AdminlogMapper" >
  <resultMap id="BaseResultMap" type="com.my.unitadmin.model.Adminlog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="admin" property="admin" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, admin, content, addtime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from adminlog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByFilter" parameterType="map" resultType="map">
    select <include refid="Base_Column_List" />
    from adminlog
    <where>
      <if test="admin!=null">
        and admin=#{admin, jdbcType=VARCHAR}
      </if>
      <if test="content!=null">
        and (content like CONCAT('%',#{content},'%') or admin like CONCAT('%',#{content},'%'))
      </if>
    </where>
    <if test="order!=null">
      order by ${order}
    </if>
    <if test="page !=null and pagesize !=null">
      limit #{page}, #{pagesize}
    </if>
  </select>
  <select id="countByFilter" parameterType="map" resultType="java.lang.Integer">
    select count(id) as ct
    from adminlog
    <where>
      <if test="admin!=null">
        and admin=#{admin, jdbcType=VARCHAR}
      </if>
      <if test="content!=null">
        and (content like CONCAT('%',#{content},'%') or admin like CONCAT('%',#{content},'%'))
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from adminlog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.my.unitadmin.model.Adminlog" >
    insert into adminlog (id, admin, content, 
      addtime)
    values (#{id,jdbcType=INTEGER}, #{admin,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.my.unitadmin.model.Adminlog" >
    insert into adminlog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="admin != null" >
        admin,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="admin != null" >
        #{admin,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.unitadmin.model.Adminlog" >
    update adminlog
    <set >
      <if test="admin != null" >
        admin = #{admin,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.unitadmin.model.Adminlog" >
    update adminlog
    set admin = #{admin,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>